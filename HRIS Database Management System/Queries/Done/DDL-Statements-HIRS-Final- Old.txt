-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-12-04 09:57:57 CST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE benefits (
    benefitid                 NVARCHAR2(50) NOT NULL,
    medical                   VARCHAR2(3 CHAR) NOT NULL,
    dental                    VARCHAR2(3 CHAR) NOT NULL,
    vision                    VARCHAR2(3 CHAR) NOT NULL,
    shorttermdisability       VARCHAR2(3 CHAR) NOT NULL,
    "401K"                    VARCHAR2(3 CHAR) NOT NULL,
    longtermdisability        VARCHAR2(3 CHAR) NOT NULL,
    criticalillness           VARCHAR2(3 CHAR) NOT NULL,
    accidentaldeathinsuarance VARCHAR2(3 CHAR) NOT NULL,
    year                      DATE
);

ALTER TABLE benefits ADD CONSTRAINT masterbenefits_pk PRIMARY KEY ( benefitid );

CREATE TABLE department (
    dept_id         INTEGER NOT NULL,
    dept_name       VARCHAR2(100 CHAR),
    dept_code       VARCHAR2(5 CHAR),
    division_div_id INTEGER NOT NULL
);

ALTER TABLE department ADD CONSTRAINT department_pk PRIMARY KEY ( dept_id );

CREATE TABLE division (
    div_id      INTEGER NOT NULL,
    div_name    VARCHAR2(50 CHAR) NOT NULL,
    div_code    VARCHAR2(5 CHAR) NOT NULL
    
);

ALTER TABLE division ADD CONSTRAINT division_pk PRIMARY KEY ( div_id );

CREATE TABLE emp_npi (
    eid               INTEGER NOT NULL,
    ssnumber          INTEGER NOT NULL,
    personal_email    VARCHAR2(100 CHAR),
    address_street1   NVARCHAR2(100),
    address_street2   NVARCHAR2(100),
    city              VARCHAR2(75 CHAR),
    postal_code       VARCHAR2(10 CHAR) NOT NULL,
    phone_number      VARCHAR2(10 CHAR) NOT NULL,
    date_birth        DATE NOT NULL,
    employee_emp_code VARCHAR2(10 CHAR) NOT NULL,
    gender            VARCHAR2(15 CHAR)
);

ALTER TABLE emp_npi ADD state varchar(2);

CREATE UNIQUE INDEX employee_npi__idx ON
    emp_npi (
        employee_emp_code
    ASC );

ALTER TABLE emp_npi ADD CONSTRAINT employee_npi_pk PRIMARY KEY ( eid );

CREATE TABLE emp_type (
   
    type_statusid INTEGER NOT NULL,
    type_status   VARCHAR2(15 CHAR) NOT NULL
);

ALTER TABLE emp_type ADD CONSTRAINT emp_type_pkv2 PRIMARY KEY ( type_statusid );



CREATE TABLE employee (
    emp_code                  VARCHAR2(10 CHAR) NOT NULL,
    last_name                 VARCHAR2(50 CHAR) NOT NULL,
    first_name                VARCHAR2(50 CHAR) NOT NULL,
    middle_name               VARCHAR2(50 CHAR),
    prefered_name             VARCHAR2(100 CHAR),
    status                    CHAR(1 CHAR),
    hire_date                 DATE NOT NULL,
    termination_date          DATE,
    exempt                    VARCHAR2(5 CHAR) NOT NULL,
    division_div_id           INTEGER NOT NULL,
    position_pos_id           INTEGER NOT NULL,
    termination_terminationid VARCHAR2(5 CHAR),
    benefits_benefitid        NVARCHAR2(50),
    pay_information_payrateid INTEGER,
    supervisor_record_id      INTEGER,  
    workemail                 VARCHAR2(50 CHAR) NOT NULL,
    type_statusid             INTEGER NOT NULL
);

ALTER TABLE employee ADD pay_type varchar(10);

CREATE UNIQUE INDEX employee_information__idx ON
    employee (
        pay_information_payrateid
    ASC );

ALTER TABLE employee ADD CONSTRAINT employee_information_pk PRIMARY KEY ( emp_code );

CREATE TABLE employee_dept (
    department_dept_id INTEGER NOT NULL,
    employee_emp_code  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE employee_dept ADD CONSTRAINT employee_dept_pk PRIMARY KEY ( department_dept_id,
                                                                        employee_emp_code );

CREATE TABLE office_employee (
    wlocation_location_id INTEGER NOT NULL,
    employee_emp_code     VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE office_employee ADD CONSTRAINT office_employee_pk PRIMARY KEY ( wlocation_location_id,
                                                                            employee_emp_code );

CREATE TABLE pay_information (
    payrateid         INTEGER NOT NULL,
    hourly            NUMBER,
    yearly            NUMBER,
    employee_emp_code VARCHAR2(10 CHAR) NOT NULL
);

CREATE UNIQUE INDEX pay_information__idx ON
    pay_information (
        employee_emp_code
    ASC );

ALTER TABLE pay_information ADD CONSTRAINT pay_information_pk PRIMARY KEY ( payrateid );

CREATE TABLE performance (
    performanceid      INTEGER NOT NULL,
    rating            INTEGER NOT NULL,
    year              VARCHAR2(4 CHAR) NOT NULL,
    employee_emp_code VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE performance ADD CONSTRAINT performance_pk PRIMARY KEY ( performanceid );

CREATE TABLE position (
    pos_id                       INTEGER NOT NULL,
    pos_grade                    VARCHAR2(3 CHAR) NOT NULL,
    pos_name                     VARCHAR2(30 CHAR),
    position_family_posfamily_id INTEGER NOT NULL
);

ALTER TABLE position ADD CONSTRAINT position_pk PRIMARY KEY ( pos_id );

CREATE TABLE position_family (
    posfamily_id INTEGER NOT NULL,
    pos_code     VARCHAR2(5 CHAR) NOT NULL,
    pos_family   VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE position_family ADD CONSTRAINT position_family_pk PRIMARY KEY ( posfamily_id );

CREATE TABLE supervisor (
    record_id INTEGER NOT NULL,
    emp_code  VARCHAR2(10 CHAR) NOT NULL,
    sup_code  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE supervisor ADD CONSTRAINT supervisor_pk PRIMARY KEY ( record_id );

CREATE TABLE termination (
    terminationid   VARCHAR2(5 CHAR) NOT NULL,
    terminationtype VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE termination ADD CONSTRAINT termination_pk PRIMARY KEY ( terminationid );

CREATE TABLE time_card (
    time_id           VARCHAR2(15 CHAR) NOT NULL,
    from_date         DATE NOT NULL,
    to_date           DATE NOT NULL,
    hours             FLOAT(5),
    employee_emp_code VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE time_card ADD CONSTRAINT time_card_pk PRIMARY KEY ( time_id );

CREATE TABLE wlocation (
    location_id INTEGER NOT NULL,
    short_name  VARCHAR2(10 CHAR) NOT NULL,
    address1    VARCHAR2(100 CHAR) NOT NULL,
    address2    VARCHAR2(100 CHAR),
    city        VARCHAR2(75 CHAR) NOT NULL,
    state       VARCHAR2(2 CHAR) NOT NULL,
    postal_code VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE wlocation ADD CONSTRAINT office_location_pk PRIMARY KEY ( location_id );

ALTER TABLE department
    ADD CONSTRAINT department_division_fk FOREIGN KEY ( division_div_id )
        REFERENCES division ( div_id );

ALTER TABLE emp_npi
    ADD CONSTRAINT emp_npi_employee_fk FOREIGN KEY ( employee_emp_code )
        REFERENCES employee ( emp_code );

ALTER TABLE employee
    ADD CONSTRAINT employee_benefits_fk FOREIGN KEY ( benefits_benefitid )
        REFERENCES benefits ( benefitid );

ALTER TABLE employee_dept
    ADD CONSTRAINT employee_dept_department_fk FOREIGN KEY ( department_dept_id )
        REFERENCES department ( dept_id );

ALTER TABLE employee_dept
    ADD CONSTRAINT employee_dept_employee_fk FOREIGN KEY ( employee_emp_code )
        REFERENCES employee ( emp_code );

ALTER TABLE employee
    ADD CONSTRAINT employee_division_fk FOREIGN KEY ( division_div_id )
        REFERENCES division ( div_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_emp_type_fk FOREIGN KEY ( type_statusid )
        REFERENCES emp_type ( type_statusid );

ALTER TABLE employee
    ADD CONSTRAINT employee_pay_information_fk FOREIGN KEY ( pay_information_payrateid )
        REFERENCES pay_information ( payrateid );

ALTER TABLE employee
    ADD CONSTRAINT employee_position_fk FOREIGN KEY ( position_pos_id )
        REFERENCES position ( pos_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_supervisor_fk FOREIGN KEY ( supervisor_record_id )
        REFERENCES supervisor ( record_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_termination_fk FOREIGN KEY ( termination_terminationid )
        REFERENCES termination ( terminationid );

ALTER TABLE office_employee
    ADD CONSTRAINT office_employee_employee_fk FOREIGN KEY ( employee_emp_code )
        REFERENCES employee ( emp_code );

ALTER TABLE office_employee
    ADD CONSTRAINT office_employee_wlocation_fk FOREIGN KEY ( wlocation_location_id )
        REFERENCES wlocation ( location_id );

ALTER TABLE pay_information
    ADD CONSTRAINT pay_information_employee_fk FOREIGN KEY ( employee_emp_code )
        REFERENCES employee ( emp_code );

ALTER TABLE performance
    ADD CONSTRAINT performace_employee_fk FOREIGN KEY ( employee_emp_code )
        REFERENCES employee ( emp_code );

ALTER TABLE position
    ADD CONSTRAINT position_position_family_fk FOREIGN KEY ( position_family_posfamily_id )
        REFERENCES position_family ( posfamily_id );

ALTER TABLE time_card
    ADD CONSTRAINT time_card_employee_fk FOREIGN KEY ( employee_emp_code )
        REFERENCES employee ( emp_code );

CREATE SEQUENCE division_div_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER division_div_id_trg BEFORE
    INSERT ON division
    FOR EACH ROW
    WHEN ( new.div_id IS NULL )
BEGIN
    :new.div_id := division_div_id_seq.nextval;
END;
/


CREATE SEQUENCE DEPARTMENT_DEPT_ID_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER DEPARTMENT_DEPT_ID_trg BEFORE
    INSERT ON DEPARTMENT
    FOR EACH ROW
    WHEN ( new.dept_id IS NULL )
BEGIN
    :new.dept_id := DEPARTMENT_DEPT_ID_seq.nextval;
END;
/


CREATE SEQUENCE EMPLOYEE_EMP_CODE_SEQ START WITH 1 NOCACHE ORDER;







-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             3
-- ALTER TABLE                             35
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          2
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
